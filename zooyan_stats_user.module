<?php
/**
*
* This module gives user statistics for Zooyan.com.
*
* @author Douglas Muth <http://www.dmuth.org/>
*
* KNOWN ISSUES:
*	- No direct control over what time of day the crontab is run
*	- The string "zooyan_stats_user_email" is repeated several times. 
*		This already caused one bug during development.
*
*/

/**
@TODO:
- Refactor call to variable_get() in install file?
*/

/**
* Create our menu item.
*
* @return array An array expected from hook_menu().
*/
function zooyan_stats_user_menu() {

	$retval = array();

	$retval["admin/zooyan/stats/users"] = array(
		"title" => "User Stats",
		"page callback" => "zooyan_stats_user_page",
		"access callback" => user_access("zooyan stats"),
		);

	//dpr($retval); // Debugging

	return($retval);

} // End of zooyan_stats_user_menu()


/**
* Create our list of permissions for this module.
*/
function zooyan_stats_user_perm() {

	$retval = array("zooyan stats");

	return($retval);

} // End of zooyan_stats_user_perm()


/**
* Our main function to generate content on the user page.
*/
function zooyan_stats_user_page() {

	$retval = "";

	$retval .= drupal_get_form("zooyan_stats_user_form");

	return($retval);

} // End of zooyan_stats_user_page()


/**
* Our form for user stats.
*
* @return Our array of form data.
*/
function zooyan_stats_user_form($form_state) {

	$retval = array();

	//
	// Some simple user stats
	//
	$retval["users"] = array(
		"#title" => t("Users"),
		"#type" => "fieldset",
		);

	$retval["users"]["today"] = array(
		"#type" => "item",
		"#title" => t("# Users registered today (so far)"),
		"#value" => zooyan_stats_user_get_num_users(0)
		);

	$retval["users"]["yesterday"] = array(
		"#type" => "item",
		"#title" => t("# Users registered yesterday"),
		"#value" => zooyan_stats_user_get_num_users(1)
		);

	$retval["users"]["all"] = array(
		"#type" => "item",
		"#title" => t("# Total users registered"),
		"#value" => zooyan_stats_user_get_num_users("all")
		);

	//
	// Our settings
	//
	$retval["settings"] = array(
		"#title" => t("Settings"),
		"#type" => "fieldset",
		);

	$retval["settings"]["email"] = array(
		"#title" => t("Email address to send reports to"),
		"#type" => "textfield",
		"#default_value" => zooyan_stats_user_get_email(),
		"#required" => TRUE,
		);

	$retval["submit"] = array(
		"#type" => "submit",
		"#value" => t("Save"),
		);

	$retval["mail"] = array(
		"#type" => "submit",
		"#value" => t("Save and send e-mail report NOW"),
		);

	return($retval);

} // End of zooyan_stats_user_form()


/**
* Our form validation function.
*/
function zooyan_stats_user_form_validate($form, $form_state) {
	// Right now, we're doing absolutely nothing!
}


/**
* Our form submission handler.  Save submitted data, optionally send email.
*/
function zooyan_stats_user_form_submit($form, $form_state) { 

	$values = $form_state["values"];
	$op = $values["op"];
	$email = $values["email"];

	variable_set("zooyan_stats_user_email", $email);
	drupal_set_message(t("Email address updated."));

	//
	// Are we also emailing off the report?
	//
	if ($op == t("Save and send e-mail report NOW")) {
		zooyan_stats_user_send_email($email);
	}

} // End of zooyan_stats_user_form_submit()


/**
* Actually create and send our email.
*
* @param string $email The email address to send the report off to.
*/
function zooyan_stats_user_send_email($email) {

	$subject = "Current User Report";
	$body = "Number of users who registered yesterday: " 
		. zooyan_stats_user_get_num_users(0) . "\r\n"
		. "Number of users who registered in total: " 
		. zooyan_stats_user_get_num_users("all") . "\r\n"
		;

	$params = array();
	$params["id"] = "zooyan stats user report";
	$params["to"] = $email;
	$params["subject"] = $subject;
	$params["body"] = $body;
	$params["headers"] = array();
	//dpr($params); // Debugging
	$result = drupal_mail_send($params);
	if (!$result) {
		$message = t("Call to drupal_mail_send() failed!");
		drupal_set_message($message, "error");
		watchdog("zooyan", $message, WATCHDOG_ERROR);
		
	} else {
		$message = t("User report emailed to %email", array("%email" => $email));
		drupal_set_message($message);
		watchdog("zooyan", $message);

	}

} // End of zooyan_stats_user_send_email()


/**
* Get our current email address.
*/
function zooyan_stats_user_get_email() {
	$retval = variable_get("zooyan_stats_user_email", "");
	return($retval);
}


/**
* This function calculates how many active users are on the site.
*
* @param integer $days_ago How many days ago do we want active users from?
*	Note that this means calendar days.  Aka 12 AM to 11:59:59 PM in the 
*	calling user's timezone.
*	SPECIAL CASE: If set to "all", ALL users are counted, regardless of 
*		when they were created.
*
*/
function zooyan_stats_user_get_num_users($days_ago = "all") {

	$retval = "";

	//dpr("$days_ago: " . format_date($dates["start"]) . ", " . format_date($dates["end"])); // Debugging

	//
	// Recast this as a string, otherwise this becomes true (0 != "all)
	// No, I don't understand it either.
	//
	$days_ago = strval($days_ago);

	$where = "";
	$query_args = array();
	if ($days_ago != "all") {
		$dates = zooyan_stats_user_get_dates($days_ago);
		//dpr($dates); // Debugging
		$where = "AND created >= %s "
			. "AND created <= %s "
			;
		$query_args = array($dates["start"], $dates["end"]);
	}

	$query = "SELECT "
		. "COUNT(*) AS cnt "
		. "FROM {users} "
		. "WHERE "
		. "status=1 "
		. $where
		;
	$cursor = db_query($query, $query_args);
	$row = db_fetch_array($cursor);
	$retval = $row["cnt"];

	return($retval);

} // End of zooyan_stats_user_get_num_users()


/**
* Get the starting and ending time_ts for our user query.
*
* @param integer $days_ago How many days ago do we want active users from?
*	Note that this means calendar days.  Aka 12 AM to 11:59:59 PM in the 
*	calling user's timezone.
*
* @return array An array of the starting and stopping time_ts.
*/
function zooyan_stats_user_get_dates($days_ago) {

	$retval = array();

	//
	// Get our starting time.  Start at midnight (local time) and subtract
	// the appropriate number of days.
	//
	$retval["start"] = mktime(0, 0, 0);
	$retval["start"] -= (86400 * $days_ago);

	$retval["end"] = $retval["start"] + 86399;

	return($retval);

} // End of zooyan_stats_user_get_dates()


/**
* This is our cron hook. It is called when cron is run.
*/
function zooyan_stats_user_cron() {

	//
	// Get the time_t for the start of today and the last time the cron 
	// hook was successfuly run.
	//
	$dates = zooyan_stats_user_get_dates(0);
	$key = "zooyan_stats_user_cron_lastrun";
	$last_run = variable_get($key, 0);

	//
	// If we were last run before today's date, run our report now.
	//
	if ($last_run < $dates["start"]) {
		$email = zooyan_stats_user_get_email();
		zooyan_stats_user_send_email($email);
		variable_set($key, time());
	}

} // End of zooyan_stats_user_cron()



